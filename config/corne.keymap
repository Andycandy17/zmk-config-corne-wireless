/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    combos {
        compatible = "zmk,combos";

        new_combo {
            bindings = <&kp ESC>;
            key-positions = <2 3>;
        };
    };

    behaviors {
        TapDance0ESC: TapDance0ESC {
            compatible = "zmk,behavior-tap-dance";
            label = "TAPDANCE0ESC";
            #binding-cells = <0>;
            bindings =
                <&kp TAB>,
                <&kp ESC>;

            tapping-term-ms = <200>;
        };
        TapDanceReturnSpce: TapDanceReturnSpce {
            compatible = "zmk,behavior-tap-dance";
            label = "TAPDANCERETURNSPCE";
            #binding-cells = <0>;
            bindings =
                <&kp RET>,
                <&kp SPACE>;

            tapping-term-ms = <170>;
        };
    };

    macros {
        Switch_Windows: Switch_Windows {
            compatible = "zmk,behavior-macro";
            label = "SWITCH_WINDOWS";
            #binding-cells = <0>;
            bindings = <&kp LA(TAB)>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | DEL |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | SHFT  |
            //                    | GUI | ENT | LWR |   | SPC | BKSP  | ALT |

            bindings = <
&TapDance0ESC  &kp Q  &kp W  &kp E                &kp R  &kp T        &kp Y     &kp U      &kp I    &kp O     &kp P    &kp DEL
    &kp LCTRL  &kp A  &kp S  &kp D                &kp F  &kp G        &kp H     &kp J      &kp K    &kp L  &kp SEMI    &kp SQT
    &kp LSHFT  &kp Z  &kp X  &kp C                &kp V  &kp B        &kp N     &kp M  &kp COMMA  &kp DOT  &kp FSLH  &kp RSHFT
                             &mo 3  &TapDanceReturnSpce  &mo 2    &kp SPACE  &kp BSPC      &mo 1
            >;
        };

        BT_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
    &trans        &trans        &trans        &trans        &trans        &trans    &trans  &trans  &trans  &trans  &trans  &trans
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &trans  &trans  &trans  &trans  &trans  &trans
    &trans        &trans        &trans        &trans        &trans        &trans    &trans  &trans  &trans  &trans  &trans  &trans
                                              &trans        &trans        &trans    &trans  &trans  &trans
            >;
        };

        Primary_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans     &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp NUMBER_5    &kp NUMBER_6    &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp NUMBER_0  &kp MINUS
&trans  &Switch_Windows        &trans        &trans        &trans        &trans      &kp K_COPY          &trans        &trans        &trans   &kp K_PASTE  &kp SLASH
&trans           &trans        &trans        &trans        &trans        &trans          &trans  &kp LEFT_ARROW      &kp DOWN  &kp UP_ARROW     &kp RIGHT  &kp EQUAL
                                             &trans        &trans        &trans          &trans          &trans        &trans
            >;
        };

        Function_layer {
            bindings = <
&kp F12  &kp F1  &kp F2  &kp F3  &kp F4  &kp F5    &kp F6  &kp F7  &kp F8  &kp F9  &kp F10  &kp F11
 &trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans   &trans   &trans
 &trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans   &trans   &trans
                         &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };

        layer_4 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };
    };
};
